decl
	integer a[11], partition(integer p,r), quicksort(integer p,r), swap(integer &a,&b);
enddecl

integer swap(integer &a,&b){
	decl
		integer temp;
	enddecl
	begin
		temp = a;
		a=b;
		b=temp;
		return 1;
	end
}

integer partition(integer p,r){
decl
integer x,i,j,dummy;
enddecl	
begin
	x=a[r];
	i=p-1;
	j=p;
	while(j<r) do
		if (a[j]<=x) then
			i=i+1;
			dummy=swap(a[i],a[j]);
		endif;
		j=j+1;
	endwhile;
	dummy=swap(a[i+1],a[r]);
	return (i+1);
	end
}

integer quicksort(integer p,r)
{
decl
	integer q,dummy;
enddecl
	begin
	if (p<r) then
		q=partition(p,r);
		dummy=quicksort(p,q-1);
		dummy=quicksort(q+1,r);
	endif;
	return 0;
	end
}

integer main(){
	decl
		integer i,temp1;
	enddecl
	begin
		i = 1;
		while(i<=10) do
			read(a[i]);
			i = i + 1;
		endwhile;
		temp1 = quicksort(1,10);
		write(111111111);
		i = 1;
		while(i<=10) do
			write(a[i]);
			i = i + 1;
		endwhile;
		
		return(1);
	end
}

